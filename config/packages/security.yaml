security:
  role_hierarchy:
    ROLE_ADMIN: [ROLE_USER]

  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider
      form_login:
        login_path: app_login
        check_path: app_login
        enable_csrf: true
        default_target_path: app_home # Redirect after successful login
        username_parameter: email # Form field name for email
        password_parameter: password # Form field name for password
      logout:
        path: app_logout
        target: app_home

    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern: ^/api
      stateless: true
      jwt: ~

  access_control:
    # Public web routes
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/$, roles: PUBLIC_ACCESS }
    - { path: ^/articles$, methods: [GET], roles: PUBLIC_ACCESS }
    - { path: ^/articles/\d+$, methods: [GET], roles: PUBLIC_ACCESS }

    # Public API routes
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/articles$, methods: [GET], roles: PUBLIC_ACCESS }
    - { path: ^/api/articles/\d+$, methods: [GET], roles: PUBLIC_ACCESS }

    # Protected web routes (ROLE_USER)
    - { path: ^/articles/new, roles: ROLE_USER }
    - { path: ^/articles/\d+/edit, roles: ROLE_USER }
    - { path: ^/articles/\d+/pdf, roles: ROLE_USER }
    - { path: ^/spotify, roles: ROLE_USER }

    # Protected API routes (ROLE_USER)
    - { path: ^/api/articles/\d+/pdf, methods: [POST], roles: ROLE_USER }
    - { path: ^/api/comments, methods: [POST, DELETE], roles: ROLE_USER }

    # Admin only web routes
    - { path: ^/articles/\d+/delete, roles: ROLE_ADMIN }

    # Admin only API routes
    - { path: ^/api/articles, methods: [POST, PUT, DELETE], roles: ROLE_ADMIN }

    # Default - require authentication for remaining API routes
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
